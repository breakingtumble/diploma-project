services:
  postgres:
    image: postgres:17.4-alpine
    environment:
      POSTGRES_DB: "parse_db"
      POSTGRES_USER: "parser"
      POSTGRES_PASSWORD: "123456"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./init:/docker-entrypoint-initdb.d
      - parse_db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U parser -d parse_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  parser:
    build:
      context: .
      dockerfile: web_parsing/Dockerfile
    volumes:
      - ./web_parsing:/app/web_parsing
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: parse_db
      DB_USER: parser
      DB_PASSWORD: "123456"
      PYTHONPATH: /app
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    volumes:
      - ./backend:/app/backend
      - ./web_parsing:/app/web_parsing
    working_dir: /app
    command: uvicorn backend.main:app --reload --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    environment:
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: parse_db
      DB_USER: parser
      DB_PASSWORD: "123456"
      PYTHONPATH: /app
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
    working_dir: /app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    command: ["npm", "run", "dev", "--", "--host"]
    restart: unless-stopped

volumes:
  parse_db-data:
    external: true
    name: diploma_parse_db-data
